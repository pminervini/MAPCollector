<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
                http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd">

	<!-- Component scan to find all Spring components -->
	<context:component-scan base-package="com.neuralnoise" />

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="order" value="1" />
		<property name="messageConverters">
			<list>
				<!-- Default converters -->
				<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>

	<int:poller default="true" fixed-rate="5000" />

	<!-- Define a channel to communicate out to a JMS Destination -->
	<int:channel id="mapChannel" />
	
	<!-- Create a channel for a listener that will consume messages -->
	<int:channel id="listenerChannel" />
	
	<int:channel id="getPayloadChannel" />
	
	<!-- Define the ActiveMQ connection factory -->
	<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>

	<!-- Defines an adapter that routes mapChannel messages to the map topic -->
	<int-jms:outbound-channel-adapter
		channel="mapChannel" connection-factory="connectionFactory"
		destination-name="topic.map" pub-sub-domain="true" />

	<!-- Defines an adapter that routes map topic messages to listenerChannel -->
	<int-jms:inbound-channel-adapter
		channel="listenerChannel" connection-factory="connectionFactory"
		destination-name="topic.map" />

	<!-- mapChannel -> t.map ; t.map -> listenerChannel -->
	<!-- payloadChannel -> t.map ; payloadChannel => listenerChannel -->

	<!-- Forwards all map topic messages from getPayloadChannel to the map topic -->
	<int-jms:message-driven-channel-adapter
		id="messageDrivenAdapter" connection-factory="connectionFactory"
		channel="getPayloadChannel" destination-name="topic.map"
		pub-sub-domain="true" />

	<!-- use messageListenerImpl.processMessage on messages on listenerChannel -->
	<int:service-activator input-channel="listenerChannel"
		ref="messageListenerImpl" method="processMessage" />

	<!-- Messages from getPayloadChannel to listenerChannel are processed by
		retrievePayloadServiceImpl.getPayload -->
	<int:service-activator input-channel="getPayloadChannel"
		output-channel="listenerChannel" ref="retrievePayloadServiceImpl"
		method="getPayload" />

</beans>